// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PickleballAPIv3.Data;

#nullable disable

namespace PickleballAPIv3.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221108020647_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PickleballAPIv3.Models.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClubId"));

                    b.Property<string>("ClubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClubId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.Leauge", b =>
                {
                    b.Property<int>("LeaugeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaugeId"));

                    b.Property<string>("LeaugeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LeaugeStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LeaugeId");

                    b.ToTable("Leauges");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.LeaugeInClub", b =>
                {
                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<int>("LeaugeId")
                        .HasColumnType("int");

                    b.ToTable("LeaugeInClubs");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.LeaugeRunner", b =>
                {
                    b.Property<int>("LeaugeRunnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaugeRunnerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LeaugeRunnerId");

                    b.ToTable("LeaugeRunners");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.LeaugeRunnerInClub", b =>
                {
                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<int>("LeaugeRunnerId")
                        .HasColumnType("int");

                    b.ToTable("LeaugeRunnerInClubs");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.LeaugeUnderLeaugeRunner", b =>
                {
                    b.Property<int>("LeagueRunnerId")
                        .HasColumnType("int");

                    b.Property<int>("LeaugeId")
                        .HasColumnType("int");

                    b.ToTable("LeaugeUnderLeaugeRunner");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.PlayerInLeauge", b =>
                {
                    b.Property<int>("LeaugeId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.ToTable("PlayersInLeauges");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.PlayerInTeam", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.ToTable("PlayersInTeams");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<string>("SessionLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SessionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.SessionInLeauge", b =>
                {
                    b.Property<int>("LeaugeId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.ToTable("SessionsInLeauges");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.SinglesGame", b =>
                {
                    b.Property<int>("SinglesGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SinglesGameId"));

                    b.Property<string>("CourtName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GameTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlayerOneId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerOneScore")
                        .HasColumnType("int");

                    b.Property<int>("PlayerTwoId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerTwoScore")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("SinglesGameId");

                    b.ToTable("SinglesGames");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.TeamGame", b =>
                {
                    b.Property<int>("TeamGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamGameId"));

                    b.Property<string>("CourtName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GameTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<int>("TeamOneId")
                        .HasColumnType("int");

                    b.Property<int>("TeamOneScore")
                        .HasColumnType("int");

                    b.Property<int>("TeamTwoId")
                        .HasColumnType("int");

                    b.Property<int>("TeamTwoScore")
                        .HasColumnType("int");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("TeamGameId");

                    b.ToTable("TeamGames");
                });

            modelBuilder.Entity("PickleballAPIv3.Models.TeamInLeauge", b =>
                {
                    b.Property<int>("LeaugeId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.ToTable("TeamInLeauges");
                });
#pragma warning restore 612, 618
        }
    }
}
